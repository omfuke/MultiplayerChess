[{"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\index.js":"1","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\App.js":"2","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\reportWebVitals.js":"3","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Board.js":"4","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Tyle\\Tyle.js":"5","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Pawn.js":"6","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Rook.js":"7","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Knight.js":"8","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Bishop.js":"9","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Queen.js":"10","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\King.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":172,"mtime":1614499005477,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":8576,"mtime":1614791541611,"results":"16","hashOfConfig":"13"},{"size":1705,"mtime":1614720389038,"results":"17","hashOfConfig":"13"},{"size":3403,"mtime":1614784057177,"results":"18","hashOfConfig":"13"},{"size":2941,"mtime":1614766634147,"results":"19","hashOfConfig":"13"},{"size":5254,"mtime":1614769502927,"results":"20","hashOfConfig":"13"},{"size":4508,"mtime":1614787758085,"results":"21","hashOfConfig":"13"},{"size":10012,"mtime":1614789043365,"results":"22","hashOfConfig":"13"},{"size":4991,"mtime":1614816835068,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3nfcky",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\index.js",[],["50","51"],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\App.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\reportWebVitals.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Board.js",["52","53","54","55"],"import React, { useState } from \"react\";\r\nimport \"./Board.css\";\r\nimport Tyle from \"./Tyle/Tyle\";\r\nimport { pawnRules } from \"./Rules/Pawn\";\r\nimport { rookRules } from \"./Rules/Rook\";\r\nimport { KnightRules } from \"./Rules/Knight\";\r\nimport { BishopRules } from \"./Rules/Bishop\";\r\nimport { QueenRules } from \"./Rules/Queen\";\r\nimport { KingRules } from \"./Rules/King\";\r\n\r\nfunction Board() {\r\n  const [board, setBoard] = useState([\r\n    [\r\n      { name: \"rook\", color: \"black\", selected: false, jump: false },\r\n      { name: \"knight\", color: \"black\", selected: false, jump: false },\r\n      { name: \"bishop\", color: \"black\", selected: false, jump: false },\r\n      { name: \"queen\", color: \"black\", selected: false, jump: false },\r\n      { name: \"king\", color: \"black\", selected: false, jump: false },\r\n      { name: \"bishop\", color: \"black\", selected: false, jump: false },\r\n      { name: \"knight\", color: \"black\", selected: false, jump: false },\r\n      { name: \"rook\", color: \"black\", selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"black\", selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n      { name: null, selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n      { name: \"pawn\", color: \"white\", selected: false, jump: false },\r\n    ],\r\n    [\r\n      { name: \"rook\", color: \"white\", selected: false, jump: false },\r\n      { name: \"knight\", color: \"white\", selected: false, jump: false },\r\n      { name: \"bishop\", color: \"white\", selected: false, jump: false },\r\n      { name: \"queen\", color: \"white\", selected: false, jump: false },\r\n      { name: \"king\", color: \"white\", selected: false, jump: false },\r\n      { name: \"bishop\", color: \"white\", selected: false, jump: false },\r\n      { name: \"knight\", color: \"white\", selected: false, jump: false },\r\n      { name: \"rook\", color: \"white\", selected: false, jump: false },\r\n    ],\r\n  ]);\r\n\r\n  const [location, setLocation] = useState(null);\r\n\r\n  const [chance, setChance] = useState(false);\r\n  const piece = chance ? \"black\" : \"white\";\r\n\r\n  if (location) {\r\n    //console.log(location);\r\n  }\r\n\r\n  const goToLocation = (position) => {\r\n    // console.log(location, position);\r\n\r\n    const newboard = board.map(function (arr) {\r\n      return arr.slice();\r\n    });\r\n\r\n    newboard.map((i, index) =>\r\n      i.map((j, ind) => {\r\n        j.selected = false;\r\n        j.jump = false;\r\n      })\r\n    );\r\n\r\n    //killing logic\r\n\r\n    if (board[position[0]][position[1]].name) {\r\n      newboard[location[0]][location[1]] = {\r\n        name: null,\r\n        selected: false,\r\n        jump: false,\r\n      };\r\n      newboard[position[0]][position[1]] = board[location[0]][location[1]];\r\n      setBoard(newboard);\r\n      setChance(!chance);\r\n\r\n      return;\r\n    }\r\n\r\n    newboard[location[0]][location[1]] = board[position[0]][position[1]];\r\n    newboard[position[0]][position[1]] = board[location[0]][location[1]];\r\n    setBoard(newboard);\r\n    setChance(!chance);\r\n\r\n    return;\r\n  };\r\n\r\n  //this function is for toggle off the piece on Click\r\n\r\n  const allFalse = () => {\r\n    const newboard = board.map(function (arr) {\r\n      return arr.slice();\r\n    });\r\n\r\n    newboard.map((i, index) =>\r\n      i.map((j, ind) => {\r\n        j.selected = false;\r\n        j.jump = false;\r\n      })\r\n    );\r\n\r\n    setBoard(newboard);\r\n  };\r\n\r\n  //this function is for showing available location for move\r\n\r\n  const checking = (detail, position) => {\r\n    console.log(position, detail);\r\n\r\n    const newboard = board.map(function (arr) {\r\n      return arr.slice();\r\n    });\r\n\r\n    const pieceRules = () => {\r\n      switch (detail.name) {\r\n        case \"pawn\":\r\n          return pawnRules(position, detail, newboard);\r\n\r\n        case \"rook\":\r\n          return rookRules(position, detail, newboard);\r\n\r\n        case \"knight\":\r\n          return KnightRules(position, detail, newboard);\r\n        case \"bishop\":\r\n          return BishopRules(position, detail, newboard);\r\n        case \"queen\":\r\n          return QueenRules(position, detail, newboard);\r\n\r\n        case \"king\":\r\n          return KingRules(position, detail, newboard);\r\n\r\n        default:\r\n          return pawnRules(position, detail, newboard);\r\n      }\r\n    };\r\n\r\n    const availablePositions = pieceRules();\r\n\r\n    newboard[position[0]][position[1]] = {\r\n      ...board[position[0]][position[1]],\r\n      selected: true,\r\n    };\r\n\r\n    if (availablePositions) {\r\n      availablePositions.map((pos) => {\r\n        newboard[pos[0]][pos[1]] = { ...board[pos[0]][pos[1]], jump: true };\r\n      });\r\n    }\r\n\r\n    newboard.map((i, index) =>\r\n      i.map((j, ind) => {\r\n        if ((index !== position[0] || ind !== position[1]) && j !== null) {\r\n          j.selected = false;\r\n        }\r\n      })\r\n    );\r\n\r\n    setBoard(newboard);\r\n  };\r\n  let tyle;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"Board\">\r\n        {board.map((i, index) => {\r\n          return i.map((j, ind) => {\r\n            if (index % 2 === 0) {\r\n              if (ind % 2 === 0) {\r\n                tyle = true;\r\n              } else {\r\n                tyle = false;\r\n              }\r\n            } else {\r\n              if (ind % 2 === 0) {\r\n                tyle = false;\r\n              } else {\r\n                tyle = true;\r\n              }\r\n            }\r\n\r\n            return (\r\n              <Tyle\r\n                key={[index, ind]}\r\n                checking={checking}\r\n                tyle={tyle}\r\n                detail={j}\r\n                position={[index, ind]}\r\n                selected={setLocation}\r\n                allFalse={allFalse}\r\n                goToLocation={goToLocation}\r\n                piece={piece}\r\n              ></Tyle>\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Tyle\\Tyle.js",["56"],"import React, { useState } from \"react\";\r\nimport \"./Tyle.css\";\r\n\r\nfunction Tyle({\r\n  tyle,\r\n  detail,\r\n  position,\r\n  checking,\r\n  selected,\r\n  allFalse,\r\n  goToLocation,\r\n  piece,\r\n}) {\r\n  // console.log(detail, position);\r\n\r\n  // const [click, setClick] = useState(false);\r\n\r\n  const clickHandler = (checking, detail, position) => {\r\n    // setClick(!click);\r\n    // if (click) {\r\n    //   allFalse();\r\n    //   return;\r\n    // }\r\n\r\n    if (detail.jump) {\r\n      goToLocation(position);\r\n      return;\r\n    }\r\n\r\n    if (detail.color === piece) {\r\n      selected(position);\r\n      allFalse();\r\n      //console.log(\"clickable\");\r\n      checking(detail, position);\r\n\r\n      return;\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Tyle\"\r\n      style={{\r\n        backgroundColor: tyle ? \"#D68910\" : \"#ffcc99\",\r\n\r\n        ...(detail.selected\r\n          ? {\r\n              boxShadow: \"inset 0 0 10px #311b0b\",\r\n            }\r\n          : {}),\r\n        ...(detail.jump && { boxShadow: \"inset 0 0 15px #0f0\" }),\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => clickHandler(checking, detail, position)}\r\n        style={{\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          ...(detail.color === piece || detail.jump\r\n            ? { cursor: \"pointer\" }\r\n            : { cursor: \"auto\" }),\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          margin: \"7.5px\",\r\n        }}\r\n      >\r\n        <i\r\n          style={{\r\n            color: detail && `${detail.color}`,\r\n          }}\r\n          className={detail && `fas fa-chess-${detail.name} fa-2x`}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tyle;\r\n","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Pawn.js",["57","58","59","60","61","62","63","64"],"const pawnRules = (position, detail, board) => {\r\n  console.log(detail);\r\n\r\n  let locations = [];\r\n  if (detail.color === \"white\") {\r\n    if (position[0] === 6) {\r\n      if (board[position[0] - 1][position[1]].name == null) {\r\n        let pos = [position[0] - 1, position[1]];\r\n        locations.push(pos);\r\n      }\r\n      if (\r\n        board[position[0] - 2][position[1]].name == null &&\r\n        board[position[0] - 1][position[1]].name == null\r\n      ) {\r\n        let pos = [position[0] - 2, position[1]];\r\n        locations.push(pos);\r\n      }\r\n\r\n      if (position[1] - 1 >= 0) {\r\n        if (board[position[0] - 1][position[1] - 1].color == \"black\") {\r\n          let pos = [position[0] - 1, position[1] - 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n      if (position[1] + 1 < 8) {\r\n        if (board[position[0] - 1][position[1] + 1].color == \"black\") {\r\n          let pos = [position[0] - 1, position[1] + 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n\r\n      return locations;\r\n    } else {\r\n      if (position[0] - 1 >= 0) {\r\n        if (board[position[0] - 1][position[1]].name == null) {\r\n          let pos = [position[0] - 1, position[1]];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n\r\n      if (position[1] - 1 >= 0 && position[0] - 1 >= 0) {\r\n        if (board[position[0] - 1][position[1] - 1].color == \"black\") {\r\n          let pos = [position[0] - 1, position[1] - 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n      if (position[1] + 1 < 8 && position[0] - 1 >= 0) {\r\n        if (board[position[0] - 1][position[1] + 1].color == \"black\") {\r\n          let pos = [position[0] - 1, position[1] + 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n\r\n      return locations;\r\n    }\r\n  } else {\r\n    if (position[0] === 1) {\r\n      if (board[position[0] + 1][position[1]].name == null) {\r\n        let pos = [position[0] + 1, position[1]];\r\n        locations.push(pos);\r\n      }\r\n\r\n      if (\r\n        board[position[0] + 2][position[1]].name == null &&\r\n        board[position[0] + 1][position[1]].name == null\r\n      ) {\r\n        let pos = [position[0] + 2, position[1]];\r\n        locations.push(pos);\r\n      }\r\n\r\n      if (position[1] - 1 >= 0) {\r\n        if (board[position[0] + 1][position[1] - 1].color == \"white\") {\r\n          let pos = [position[0] + 1, position[1] - 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n      if (position[1] + 1 < 8) {\r\n        if (board[position[0] + 1][position[1] + 1].color == \"white\") {\r\n          let pos = [position[0] + 1, position[1] + 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n\r\n      return locations;\r\n    } else {\r\n      if (position[0] + 1 < 8) {\r\n        if (board[position[0] + 1][position[1]].name == null) {\r\n          let pos = [position[0] + 1, position[1]];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n      if (position[1] - 1 >= 0 && position[0] + 1 < 8) {\r\n        if (board[position[0] + 1][position[1] - 1].color == \"white\") {\r\n          let pos = [position[0] + 1, position[1] - 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n      if (position[1] + 1 < 8 && position[0] + 1 < 8) {\r\n        if (board[position[0] + 1][position[1] + 1].color == \"white\") {\r\n          let pos = [position[0] + 1, position[1] + 1];\r\n          locations.push(pos);\r\n        }\r\n      }\r\n\r\n      return locations;\r\n    }\r\n  }\r\n};\r\n\r\nexport { pawnRules };\r\n","C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Rook.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Knight.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Bishop.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\Queen.js",[],"C:\\Users\\omfuk\\Desktop\\MultiplayerChess\\client\\src\\Board\\Rules\\King.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":112,"column":22,"nodeType":"71","messageId":"72","endLine":112,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":149,"column":22,"nodeType":"71","messageId":"72","endLine":149,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":198,"column":36,"nodeType":"71","messageId":"72","endLine":198,"endColumn":38},{"ruleId":"69","severity":1,"message":"70","line":204,"column":22,"nodeType":"71","messageId":"72","endLine":204,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":20,"column":59,"nodeType":"79","messageId":"80","endLine":20,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":26,"column":59,"nodeType":"79","messageId":"80","endLine":26,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":42,"column":59,"nodeType":"79","messageId":"80","endLine":42,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":48,"column":59,"nodeType":"79","messageId":"80","endLine":48,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":72,"column":59,"nodeType":"79","messageId":"80","endLine":72,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":78,"column":59,"nodeType":"79","messageId":"80","endLine":78,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":93,"column":59,"nodeType":"79","messageId":"80","endLine":93,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":99,"column":59,"nodeType":"79","messageId":"80","endLine":99,"endColumn":61},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]